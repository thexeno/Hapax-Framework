#ifndef CONF_H_
#define CONF_H_

#include "hal.h"
#include "pin_hal.h"
#include "spi_hal.h"
#include "uart_hal.h"
#include "interrupt_hal.h"
#include "timer_hal.h"
#include "utils/task.h"

// CPU configs
#define CONF_CPU_FREQ	 16000000UL

// Utils config
typedef uint8_t rb_sz_t;




enum
{
	PIN_SCK = 0,
	DEBUG_LED_OC_T2A,
	PIN_MOSI,
	DEBUG_LED_2_SS,
	DEBUG_LED_PWM_T0B,
	PIN_MISO,
	RX_PIN,
	TX_PIN,
	CONF_TOTAL_APP_PIN
};
gpio_hal_cfg_t gpio_hal_conf[CONF_TOTAL_APP_PIN] =
{
	{PIN_SCK,				 GPIO_PORT_B, 			GPIO_PIN_5,		GPIO_MODE_OUTPUT, 		GPIO_HIGH,		GPIO_INIT_PEND},
	{DEBUG_LED_OC_T2A,		 GPIO_PORT_B,			GPIO_PIN_3, 	GPIO_MODE_OUTPUT, 		GPIO_LOW,		GPIO_INIT_PEND},
	{PIN_MOSI, 				 GPIO_PORT_B, 			GPIO_PIN_3, 	GPIO_MODE_OUTPUT, 		GPIO_HIGH,		GPIO_INIT_PEND},
	{DEBUG_LED_2_SS, 		 GPIO_PORT_B, 			GPIO_PIN_2, 	GPIO_MODE_OUTPUT, 		GPIO_HIGH,		GPIO_INIT_PEND},
	{DEBUG_LED_PWM_T0B, 	 GPIO_PORT_D, 			GPIO_PIN_5, 	GPIO_MODE_OUTPUT, 		GPIO_LOW,		GPIO_INIT_PEND},
	{PIN_MISO, 		    	 GPIO_PORT_B, 			GPIO_PIN_4, 	GPIO_MODE_INPUT, 		GPIO_LOW,		GPIO_INIT_PEND},
	{RX_PIN, 				 GPIO_PORT_D, 			GPIO_PIN_0, 	GPIO_MODE_OUTPUT, 		GPIO_HIGH,		GPIO_INIT_PEND},
	{TX_PIN, 				 GPIO_PORT_D, 			GPIO_PIN_1, 	GPIO_MODE_OUTPUT, 		GPIO_HIGH,		GPIO_INIT_PEND}

};


// UART defines and config
#define CONF_SERIAL_BAUD 1200
const uart_hal_cfg_t uart_hal_cfg[] =
{
	{UART_0, UART_FULL_DUPLEX, CONF_SERIAL_BAUD, CONF_CPU_FREQ},
	//{UART_0, UART_FULL_DUPLEX, CONF_SERIAL_BAUD, CONF_CPU_FREQ}
};

// SPI defines and config
#define SPI_TX_FIFO 8
#define SPI_RX_FIFO 8
const spi_hal_cfg_t spi_hal_cfg[] =
{
	{SPI_0,	SPI_MODE_SLAVE, SPI_HAL_MSB_FIRST, SPI_HAL_SCK_LEAD_EDGE_SAMP, SPI_HAL_SCK_LEAD_RISE, DEBUG_LED_2_SS, PIN_MOSI, PIN_MISO, PIN_SCK, 100000U, CONF_CPU_FREQ},
};



const timer_hal_cfg_t timer_hal_conf[] =
{
	{TIMER_0, TIMER_HAL_FAST_PWM_CUSTOM,	TIMER_HAL_CLK_OSC, TIMER_HAL_INT_ON, TIMER_HAL_COMP_A_DISCONNECT, 0,	1,	TIMER_HAL_PWM_B,		TIMER_HAL_PWM_POL_NORMAL},
	{TIMER_1, TIMER_HAL_COMPARE_MATCH,		TIMER_HAL_CLK_OSC, TIMER_HAL_INT_ON, TIMER_HAL_COMP_A_DISCONNECT, 0,	64,		TIMER_HAL_PWM_UNUSED,	TIMER_HAL_PWM_POL_UNUSED},
	{TIMER_2, TIMER_HAL_NORMAL,				TIMER_HAL_CLK_OSC, TIMER_HAL_INT_ON, TIMER_HAL_COMP_A_DISCONNECT, 0,	64,		TIMER_HAL_PWM_UNUSED,	TIMER_HAL_PWM_POL_UNUSED}
};



#define CONF_TOTAL_TASK  12
task_t 		tasks[CONF_TOTAL_TASK];
const task_conf_t task_config =
{
	&timer_hal_conf[TIMER_1],	(task_tick_t)1000,	(task_tick_t)1000000,	CONF_TOTAL_TASK,	CONF_CPU_FREQ
};



#endif /* HAL_CONF_H_ */
